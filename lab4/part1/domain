(defdomain domain
    (
        (:operator (!pickup ?item ?uav ?loc) 
            ;; Preconditions
            (
                (uav ?uav) (pickable ?item)
                (at ?item ?loc) (at ?uav ?loc)
                (free ?uav)
            )
            
            ;; Delete effects
            (
                (free ?uav)
                (at ?item ?loc)
            )
            
            ;; Add effects
            (
                (holding ?item ?uav)
            )
        )
        
        (:operator (!give ?item ?person ?uav ?location)
            ;; Preconditions
            (
                (person ?person) (uav ?uav)
                (at ?person ?location) (at ?uav ?location)
                (holding ?item ?uav)
                (has ?item ?content)
                (need ?person ?content) 
            )
            
            ;; Delete effects
            (
                (holding ?item ?uav) 
                (need ?person ?content)
                (has ?item ?content)
            )
            
            ;; Add effects
            (
                (free ?uav)
            ) 
        )

        (:operator (!move ?uav ?from-location ?to-location)
            ;; Preconditions
            (
                (uav ?uav) (location ?to-location)
                (at ?uav ?from-location)
                (different ?from-location ?to-location)
            )
            
            ;; Delete effects
            (
                (at ?uav ?from-location)
            )
            
            ;; Add effects
            (
                (at ?uav ?to-location)
            )
        )
        
        ;;;------------------------------------------------------------
        ;; actual AI planning methods

        (:method (deliver ?person ?content)
        uav_has_item_and_in_place
                (
                    (at ?uav ?location)
                    (at ?person ?location)
                    (holding ?item ?uav)
                    (has ?item ?content)
                    (need ?person ?content)
                ) (
                    (!give ?item ?person ?uav ?location)
                )

        uav_has_item_not_in_place
                (
                    (at ?uav ?loc1)
                    (at ?person ?loc2)
                    (holding ?item ?uav)
                    (has ?item ?content)
                    (need ?person ?content)
                ) (
                    (!move ?uav ?loc1 ?loc2) 
                    (deliver ?person ?content)
                )

        uav_need_item
                () (
                    (find ?content) 
                    (deliver ?person ?content)
                )
        )
        
        (:method (find ?content)
            uav_in_location
                (
                    (uav ?uav)
                    (at ?uav ?location)
                    (at ?item ?location)
                    (has ?item ?content)
                )((!pickup ?item ?uav ?location))
            uav_not_in_location
                (
                    (uav ?uav)
                    (at ?uav ?loc1)
                    (at ?item ?loc2)
                    (has ?item ?content)
                ) (
                    (!move ?uav ?loc1 ?loc2) 
                    (find ?content)
                )
        )

        (:method (do_all_deliver)
        make_delivers
            (
                (need ?p ?t)
            ) (
                (deliver ?p ?t)
                (do_all_deliver)
            )
            ()()
        )
        ;;;------------------------------------------------------------
        ;; Axioms

        (:- (same ?x ?x) nil)
        (:- (different ?x ?y) ((not (same x? y?))))
    )
)
